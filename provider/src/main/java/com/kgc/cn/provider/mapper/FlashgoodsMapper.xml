<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kgc.cn.provider.mapper.FlashgoodsMapper">
  <resultMap id="BaseResultMap" type="com.kgc.cn.common.dto.Flashgoods">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="goodsId" jdbcType="BIGINT" property="goodsid" />
    <result column="goodsDescription" jdbcType="VARCHAR" property="goodsdescription" />
    <result column="goodsName" jdbcType="VARCHAR" property="goodsname" />
    <result column="goodsColor" jdbcType="VARCHAR" property="goodscolor" />
    <result column="goodsCount" jdbcType="INTEGER" property="goodscount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    goodsId, goodsDescription, goodsName, goodsColor, goodsCount
  </sql>
  <select id="selectByExample" parameterType="com.kgc.cn.common.dto.FlashgoodsExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from flashgoods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
        limit ${limit}
        <if test="offset != null">
        ,${offset}
        </if>>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from flashgoods
    where goodsId = #{goodsid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from flashgoods
    where goodsId = #{goodsid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.kgc.cn.common.dto.FlashgoodsExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from flashgoods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>

    <insert id="insert" parameterType="com.kgc.cn.common.dto.Flashgoods">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into flashgoods (goodsId, goodsDescription, goodsName, 
      goodsColor, goodsCount)
    values (#{goodsid,jdbcType=BIGINT}, #{goodsdescription,jdbcType=VARCHAR}, #{goodsname,jdbcType=VARCHAR}, 
      #{goodscolor,jdbcType=VARCHAR}, #{goodscount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.kgc.cn.common.dto.Flashgoods">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into flashgoods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="goodsid != null">
        goodsId,
      </if>
      <if test="goodsdescription != null">
        goodsDescription,
      </if>
      <if test="goodsname != null">
        goodsName,
      </if>
      <if test="goodscolor != null">
        goodsColor,
      </if>
      <if test="goodscount != null">
        goodsCount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="goodsid != null">
        #{goodsid,jdbcType=BIGINT},
      </if>
      <if test="goodsdescription != null">
        #{goodsdescription,jdbcType=VARCHAR},
      </if>
      <if test="goodsname != null">
        #{goodsname,jdbcType=VARCHAR},
      </if>
      <if test="goodscolor != null">
        #{goodscolor,jdbcType=VARCHAR},
      </if>
      <if test="goodscount != null">
        #{goodscount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kgc.cn.common.dto.FlashgoodsExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from flashgoods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update flashgoods
    <set>
      <if test="record.goodsid != null">
        goodsId = #{record.goodsid,jdbcType=BIGINT},
      </if>
      <if test="record.goodsdescription != null">
        goodsDescription = #{record.goodsdescription,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsname != null">
        goodsName = #{record.goodsname,jdbcType=VARCHAR},
      </if>
      <if test="record.goodscolor != null">
        goodsColor = #{record.goodscolor,jdbcType=VARCHAR},
      </if>
      <if test="record.goodscount != null">
        goodsCount = #{record.goodscount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update flashgoods
    set goodsId = #{record.goodsid,jdbcType=BIGINT},
      goodsDescription = #{record.goodsdescription,jdbcType=VARCHAR},
      goodsName = #{record.goodsname,jdbcType=VARCHAR},
      goodsColor = #{record.goodscolor,jdbcType=VARCHAR},
      goodsCount = #{record.goodscount,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kgc.cn.common.dto.Flashgoods">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update flashgoods
    <set>
      <if test="goodsdescription != null">
        goodsDescription = #{goodsdescription,jdbcType=VARCHAR},
      </if>
      <if test="goodsname != null">
        goodsName = #{goodsname,jdbcType=VARCHAR},
      </if>
      <if test="goodscolor != null">
        goodsColor = #{goodscolor,jdbcType=VARCHAR},
      </if>
      <if test="goodscount != null">
        goodsCount = #{goodscount,jdbcType=INTEGER},
      </if>
    </set>
    where goodsId = #{goodsid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kgc.cn.common.dto.Flashgoods">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update flashgoods
    set goodsDescription = #{goodsdescription,jdbcType=VARCHAR},
      goodsName = #{goodsname,jdbcType=VARCHAR},
      goodsColor = #{goodscolor,jdbcType=VARCHAR},
      goodsCount = #{goodscount,jdbcType=INTEGER}
    where goodsId = #{goodsid,jdbcType=BIGINT}
  </update>
  <update id="delGoodsNum">
        update flashgoods set goodsCount = goodsCount - #{num} where goodsId = #{goodsId};
  </update>
</mapper>